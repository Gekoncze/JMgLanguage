literals
    are convertible to instances of buildin types
    users can provide their own converters for their own types (TODO)
    escape sequences or anything like that are not supported by default
        special buildin constants can be used instead (TODO)
        or you can handle some escapes like \n or \t yourself inside your own converters

stamps
    they are just markers
    they don't hold any values, ie there will be no "stamp instances"
    values can be handled by type variables instead

variables
    global variables are standalone components
    instance variables are used in class instances
    type variables are used in class type instances

expressions
    all expressions are guaranteed to be evaluated in order from left to right
    there is only one exception which is assignment
        it applies for both value and reference assignments
        there the order is right first and left second
        the reason for that is that right is a source and left is a destination
            in mg, all input is evaluated first before evaluating output